C-GENERATOR OF V.A.GRISHAGIN'S CLASS OF TEST FUNCTIONS

 This generator package has been written in ANSI Standard C and successfully tested
on Windows and UNIX platforms. It includes the following files:

 a) vagris.c – the main file;
 b) vagris.h – the header file that users should include in their application projects 
in order to call subroutines from the file vagris.c;
 c) example.c – an example of the generator usage;
 d) Makefile – an example of a UNIX makefile provided to UNIX users for a simple
compilation and linkage of separate files of the application project.

 To utilize the generator the user must perform the following two steps:
 -- STEP 1. Generation of a specific test function of the test class.
 -- STEP 2. Evaluation of the generated test function and, if necessary, its partial
derivatives.

 -- ON STEP 1, the user can generate a specific function that belongs to the class of 
100 test functions. This is done by calling subroutine:
 
 void set_random (int nf);

where "nf" is the number of a function from the test class (from 1 to 100).

 -- ON STEP 2, the user can evaluate the test function "nf" (or its partial 
derivatives), generated on Step 1. 
 
 Evaluation of this function in a point (x,y) is done by calling subroutine:

 double random_func (double x, double y).

 Evaluation of the first order partial derivative of the function "nf" with
respect to the variable x is done by calling subroutine:

double random_pfuncx (double x, double y).

 Evaluation of the first order partial derivative of the function "nf" with
respect to the variable y is done by calling subroutine:

double random_pfuncy (double x, double y).

 If the user wishes to evaluate another test function from the class,
he/she should return to Step 1 and recall subroutine set_random() with a new 
function number. 

 For the user's convenience, global minimizers of all 100 functions of the class 
have been gathered in array rand_minimums[]; the global minimizer (x*, y*) of the 
function "nf" is defined as: 
 
 x* = rand_minimums[(nf-1)*2];
 y* = rand_minimums[(nf-1)*2+1].
 
 Coordinates of the global minimizers have been found by calculating the function 
values on a uniform grid with mesh size of 0.0001.

 An example of the generation and use of the test class can be found in
the file example.c. 
 